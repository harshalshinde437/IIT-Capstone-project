# Generated by Django 5.1.3 on 2024-11-14 11:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attrition_status', models.CharField(max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessTravel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_type', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EducationField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender_type', models.CharField(max_length=6, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalarySlab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slab', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('age', models.IntegerField()),
                ('daily_rate', models.IntegerField()),
                ('distance_from_home', models.IntegerField()),
                ('education', models.IntegerField()),
                ('environment_satisfaction', models.IntegerField()),
                ('employee_count', models.IntegerField()),
                ('employee_number', models.IntegerField()),
                ('hourly_rate', models.IntegerField()),
                ('job_involvement', models.IntegerField()),
                ('job_level', models.IntegerField()),
                ('job_satisfaction', models.IntegerField()),
                ('monthly_income', models.IntegerField()),
                ('monthly_rate', models.IntegerField()),
                ('num_companies_worked', models.IntegerField()),
                ('percent_salary_hike', models.IntegerField()),
                ('performance_rating', models.IntegerField()),
                ('relationship_satisfaction', models.IntegerField()),
                ('standard_hours', models.IntegerField()),
                ('stock_option_level', models.IntegerField()),
                ('total_working_years', models.IntegerField()),
                ('training_times_last_year', models.IntegerField()),
                ('work_life_balance', models.IntegerField()),
                ('years_at_company', models.IntegerField()),
                ('years_in_current_role', models.IntegerField()),
                ('years_since_last_promotion', models.IntegerField()),
                ('years_with_curr_manager', models.IntegerField()),
                ('over_18', models.CharField(max_length=1)),
                ('overtime', models.BooleanField()),
                ('age_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.agegroup')),
                ('attrition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.attrition')),
                ('business_travel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.businesstravel')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.department')),
                ('education_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.educationfield')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.gender')),
                ('job_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.jobrole')),
                ('marital_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.maritalstatus')),
                ('salary_slab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee.salaryslab')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('emp_id',), name='unique_employee')],
            },
        ),
    ]
